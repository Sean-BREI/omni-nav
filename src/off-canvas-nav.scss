/***************************************************
* Colors and Mixins â€“ copied from web-components repo
***************************************************/

/* These are colors commonly found on the site.
Typically, if a color is used more than once or twice,
it should be added here as a variable. Changing the value
of these variables will affect the colors sitewide. */

$cu-red: #a82439;
// $cu-red2: #830c28; // Old red replaced by $cu-red to keep colors standard
// $cu-red3: #98002E; // Old red replaced by $cu-red to keep colors standard
$cu-dark-red: #851c2b;
$cu-off-white: #f7f6f0;
$cu-light-grey: #ECEBE5;
$cu-warm-light-grey: #EDEADE;

$white: #FFF;
$black: #000;
$brown: #896d49;

$teal: #25b6a5;
$teal-hover: #24d4bf;

$teal2: #02bac2;
$teal2-hover: #01cdd4;
$teal2-light: #a6ddd1;

$red: $cu-red;
$red-hover: #c42b43;

$grey: #353430;
$grey-hover: #4c4b45;

$grey2: #6e6e66;
$grey2-hover: #918e87;

/* These are colors of common elements or states. */

$cu-font-color: $grey;
$cu-link-hover: #c52b43;
$cu-link-down: $cu-dark-red;
$cu-form-shadow: #797564;
$cu-border: #A58F75;

/* These colors are specifically for the class "newbutton". */

$new-button-primary: $teal2-hover;
$new-button-secondary: $teal2;
$new-button-hover-primary: $teal2-light;
$new-button-hover-secondary: $teal2;


// Theme Specific Colors

/* These are theme specific colors. I moved them here
to make it easier to edit the colors for each theme
all in one place. Variables prefixed with "theme" are
colors found in multiple themes. The others are specific
to a theme. */

$theme-light-grey: #dbdfcf; // Light grey found in multiple themes
$theme-yellow: #d4e13c; // Yellow found in multiple themes
$theme-blue: #006080; // Blue found in multiple themes

$asbe-primary: #006185;
$asbe-secondary: #004f6b;

$ces-primary: #008ec1;
$ces-secondary: #007299;

$copa-primary: #69465c;
$copa-secondary: #4f3445;

$crean-primary: #1f8a84;
$crean-secondary: #125e5a;

$dance-primary: #007165;
$dance-secondary: #005249;

$dodge-primary: #1f1f1f;
$dodge-secondary: $black;
$dodge-tertiary: #42413d;

$pharmacy-primary: #959300;
$pharmacy-secondary: #636200;
$pharmacy-tertiary: #dde2d5;

$scst-primary: #4A5E0F;
$scst-secondary: #36450B;
$scst-tertiary: #99a12b;

$theatre-primary: #002e5f;
$theatre-secondary: #001f40;

$wilkinson-primary: #008ec1;
$wilkinson-secondary: #007299;

@mixin bp($point, $val: 0) {

	@if $point == m { // Medium
		@media (min-width: 780px) { @content; }
	}

	@if $point == l { // Large
		@media (min-width: 1024px) { @content; }
	}

	@if $point == xl { // Extra Large
		@media (min-width: 1200px) { @content; }
	}

	@if $point == wildcard-min { // Uses variable breakpoint.
		@media (min-width: #{$val}) { @content; }
	}

	@if $point == wildcard-max { // Uses variable breakpoint.
		@media (max-width: #{$val}) { @content; }
	}

	// @if $point == highres {
	// 	@media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3 / 2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-devicepixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) { @content; }
	// }

	@if $point == print {
		@media only print { @content; }
	}

}

@mixin em_width($px, $default: $fontsize) { width: #{$px / $default}em; }
@mixin em_height($px, $default: $fontsize) { height: #{$px / $default}em; }
@mixin em_maxwidth($px, $default: $fontsize) { max-width: #{$px / $default}em; }
@mixin em_minwidth($px, $default: $fontsize) { min-width: #{$px / $default}em; }
@mixin em_maxheight($px, $default: $fontsize) { max-height: #{$px / $default}em; }
@mixin em_minheight($px, $default: $fontsize) { min-height: #{$px / $default}em; }
@mixin em_margin($top:0,$right:0,$bot:$top,$left:$right, $default: $fontsize) { margin: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em }
@mixin em_padding($top:0,$right:0,$bot:$top,$left:$right, $default: $fontsize) { padding: #{$top / $default}em #{$right / $default}em #{$bot / $default}em #{$left / $default}em }
@mixin em_fontsize($px) { font-size: #{$px / $fontsize}em; }
@mixin em_lineheight($px, $default: $fontsize) { line-height: #{$px / $default}em; }

@mixin box_shadow($hoffset: 0, $voffset: 0, $blur: 0, $spread: 0, $color: $black, $inset: false) {

	@if $inset == false {
		-webkit-box-shadow: $hoffset $voffset $blur $spread $color;
		box-shadow: $hoffset $voffset $blur $spread $color;
	} @else {
		-webkit-box-shadow: inset $hoffset $voffset $blur $spread $color;
		box-shadow: inset $hoffset $voffset $blur $spread $color;
	}

}

@mixin vendorize($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin opacity($i) {
	$forie: $i * 100;

	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity="+$forie+")";
	filter: alpha(opacity=$forie);
	opacity: $i;
}

@mixin transition($sel: all, $time: 1s, $ease: linear) {
	-webkit-transition: $sel $time $time;
	-moz-transition: $sel $time $time;
	-o-transition: $sel $time $time;
	-ms-transition: $sel $time $time;
	transition: $sel $time $time;
}

.cu-off-canvas-nav {
	width: 200%;
	position: relative;
	left: 0;
	@include transition(all, 0.5s, ease-in-out);

	.shifted & {
		left: -100%;
	}

	li {
		border-top: 1px solid darken($cu-light-grey, 10%);
	}

	a {
		color: $grey2;
		font-weight: normal; /* Fallback */
		font-weight: 400;
	}

	> ul {
		width: 50%;
		float: left;
		border-bottom: 1px solid darken($cu-light-grey, 10%);
		@include vendorize(box-sizing, border-box);
		
		&.level-1 {
			border-right: 1px solid darken($cu-light-grey, 10%);
		}

		&.level-2 {
			position: relative;
			left: -1px;
			border-left: 1px solid darken($cu-light-grey, 10%);
		}

		> li {
			display: block;
			position: relative;
			width: 100%;

			> ul {
				display: none;

				> li {
					background-color: lighten($cu-light-grey, 5%);
					
					a {
						display: block;
						font-size: 16px;
						padding: 0.5em 1.325em;
						color: $grey2-hover;
					}

				}

			}

			&.open {

				> a {
					color: $grey;

					&:before {
						color: $cu-red;
					}
					svg {
						fill: $cu-red;
					}
				}

				.toggle > span {
					@include vendorize(transform, rotate(45deg));
				}

			}

			> a, .toggle {
				height: 60px;
			}

			> a {
				display: table-cell;
				vertical-align: middle;
				padding: 0 70px 0 1.25em;
				position: relative;
				font-size: 18px;
				font-family: "proxima-nova-soft", "proxima-nova-soft-n4", sans-serif;
				@include transition(all, 0.25s, ease-in-out);

				&.has-icon {
					padding: 0 70px 0 2.75em;
					text-indent: -28px;
				}

				&:before, svg {
					vertical-align: top;
					@include transition(all, 0.25s, ease-in-out);
				}

				&:before {
					margin-right: 10px;
				}

				svg {
					fill: $grey2;
					display: inline-block;
					margin-right: 10px;
					width: 18px;
				}

			}

			.toggle {
				width: 60px;
				line-height: 60px;
				font-size: 18px;
				text-align: center;
				position: absolute;
				top: 0;
				right: 0;
				background-color: lighten($cu-light-grey, 5%);
				color: $grey;
				font-weight: normal; /* Fallback */
				font-weight: 400;
				cursor: pointer;

				> span {
					display: block;
					@include transition(all, 0.25s, ease-in-out);
				}

			}

		}

	}

}

.cu-off-canvas-nav-container {
	position: fixed;
	top: 0;
	left: -85%;
	width: 85%;
	height: 100%;
	overflow-y: scroll;
	overflow-x: hidden;
	z-index: 99999;
	background-color: $white;
	@include transition(all, 0.5s, ease-in-out);

	* {
		-webkit-font-smoothing: antialiased;
	}

	&.open {
		left: 0;

		@include bp(m) {
			left: -85%;
			@include transition(all, 0s, ease-in-out);
		}

	}

	ul, ol {
		margin: 0;
		padding: 0;
	}

	a {
		text-decoration: none;
		&:hover, &:focus {
			text-decoration: none;
		}
	}

}

.cu-off-canvas-overlay {
	background-color: $black;
	z-index: 99998;
	position: fixed;
	visibility: hidden;
	opacity: 0;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	width: 100%;
	height: 100%;
	@include transition(all, 0.5s, ease-in-out);

	&.active {
		visibility: visible;
		opacity: 0.5;

		@include bp(m) {
			display: none;
		}

	}

	@include bp(m) {
		display: none;
	}

}

.cu-off-canvas-header {
	position: relative;
	background-color: $cu-light-grey;
	padding: 1.5em 1.25em 0.5em;

	img {
		max-width: 87.5%;
	}

	.close {
		cursor: pointer;
		position: absolute;
		top: 0;
		right: 0;
		padding: 1.75em 1.25em;
	}

	.cu-off-canvas-links {
		min-height: 1em;
		margin-top: 2em;
		position: relative;
		height: 30px;

		.shifted & {

			.level-1-link, .main-menu {
				opacity: 0;
				z-index: 1;
			}

			.level-2-link {
				opacity: 1;
				z-index: 2;
			}

		}

		.level-1-link, .main-menu {
			opacity: 1;
			z-index: 2;
		}

		.level-1-link, .level-2-link, .main-menu {
			font-size: 13px;
			text-transform: uppercase;
			color: $grey2;
			position: absolute;
			height: 30px;
			line-height: 30px;
			@include transition(opacity, 0.5s, ease-in-out);

			.accent {
				color: $theme-blue;
			}

			&.hidden {
				display: none;
			}

			&:hover {
				text-decoration: none;
			}

		}

		.level-1-link {
			right: 0;
		}

		.level-2-link, .main-menu {
			left: 0;
		}

		.level-2-link {
			opacity: 0;
			z-index: 1;
		}

	}

}
